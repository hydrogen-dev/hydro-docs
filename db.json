{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/logo.bak.png","path":"images/logo.bak.png","modified":0,"renderable":0},{"_id":"source/images/logo.png","path":"images/logo.png","modified":0,"renderable":0},{"_id":"source/images/navbar.png","path":"images/navbar.png","modified":0,"renderable":0},{"_id":"themes/whiteboard/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/lib/energize.js","path":"js/lib/energize.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/lib/imagesloaded.min.js","path":"js/lib/imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/lib/jquery.highlight.js","path":"js/lib/jquery.highlight.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/lib/jquery.tocify.js","path":"js/lib/jquery.tocify.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/lib/jquery_ui.js","path":"js/lib/jquery_ui.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/js/lib/lunr.js","path":"js/lib/lunr.js","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/whiteboard/_config.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518211067000},{"_id":"source/index.bak.md","hash":"9aeab88c1f577217c0426bcee0b08a7f1c0f28d1","modified":1518211067000},{"_id":"source/index.md","hash":"932084b0eeb499521d7f586e32f17397a9155af5","modified":1518215792000},{"_id":"themes/whiteboard/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1518211067000},{"_id":"source/images/logo.bak.png","hash":"989d9447a2a3ae09985f9111fb861f71b5cab7e9","modified":1518211067000},{"_id":"source/images/logo.png","hash":"5f6ffa5b255f27927168d41cdec7be4a7a672558","modified":1518211067000},{"_id":"source/images/navbar.png","hash":"cad8cdcb27be541501d6e48d8fa068a95606978e","modified":1518211067000},{"_id":"source/includes/_account.md","hash":"da104f733045067b16cf40bb36808f18537ad850","modified":1518211067000},{"_id":"source/includes/_allocation.md","hash":"abe216386f14447e66e7f742c8d1e0b5cac028f4","modified":1518211067000},{"_id":"source/includes/_authentication.md","hash":"0ace132c26051ced84955751b3875f1db3b462a4","modified":1518217071000},{"_id":"source/includes/_billing.md","hash":"f25d33e7173742da91990f7dae6ded26163a596c","modified":1518211067000},{"_id":"source/includes/_baseURLs.md","hash":"fc03610aafb2835445c4a8915c573121f086c445","modified":1518211067000},{"_id":"source/includes/_benchmark.md","hash":"56302a5f3ddcb0943eae918f34a77b953abc8c0c","modified":1518211067000},{"_id":"source/includes/_changelog.md","hash":"d4514e64255f733a5d9627ae0f0623d4285a1e1a","modified":1518211067000},{"_id":"source/includes/_client.md","hash":"695aaaae0e2765fb487d46322b3a9f9d4022fd52","modified":1518211067000},{"_id":"source/includes/_document.md","hash":"3e244e710d14ec5bbfd653ac831c0eb45f50d3c4","modified":1518211067000},{"_id":"source/includes/_endpoints.md","hash":"54e752b23ac5c0c7a2c60def2c15080f07b5e368","modified":1518211067000},{"_id":"source/includes/_decisiontree.md","hash":"06e74b974c244b0706d47d5bda3a3c4d88c8f9cc","modified":1518211067000},{"_id":"source/includes/_errors.md","hash":"c34b72344628fd060e819793fc2d67d80b0509c7","modified":1518216470000},{"_id":"source/includes/_filters.md","hash":"8a798ce7f2e2eda907003fd553732daae2864360","modified":1518211067000},{"_id":"source/includes/_faq.md","hash":"d24e813d8ce8086cfc97ccf4b2bca74d73800402","modified":1518211067000},{"_id":"source/includes/_funding.md","hash":"6fa4b25ceac26de0b5a1464248651606798a94a0","modified":1518211067000},{"_id":"source/includes/_getstarted.md","hash":"5c3137ed92862bbf571a4d3303237c01b7e74538","modified":1518211067000},{"_id":"source/includes/_intro.md","hash":"4e3d9747099fe82fa860eb7d18fb565f25cf1506","modified":1518217810000},{"_id":"source/includes/_goal.md","hash":"98c7f58057f57c9a1d3c90eb03b5b06131de019e","modified":1518211067000},{"_id":"source/includes/_metadata.md","hash":"0d3ac2f97215bc125c1f34a2956ecdf1bd04df73","modified":1518211067000},{"_id":"source/includes/_marketing.md","hash":"8da75cfdc79e828ee3ae0a6f0b262a9bea3a766d","modified":1518211067000},{"_id":"source/includes/_money.md","hash":"e43a2afb4d01329fc7e64bf2748ce906a495f010","modified":1518211067000},{"_id":"source/includes/_model.md","hash":"69c8d1cfb68d36d291acdbce41756458c763f9e9","modified":1518211067000},{"_id":"source/includes/_pagination.md","hash":"be4881ab7be4dc6eea0a683365c48ca7933d0dd3","modified":1518211067000},{"_id":"source/includes/_order.md","hash":"d68e6faf93717686ed6180db05ace28cdf225f74","modified":1518211067000},{"_id":"source/includes/_securities.md","hash":"8e6bab97c72911c7dafc0c8434d3ba9670f70aaa","modified":1518211067000},{"_id":"source/includes/_support.md","hash":"91c555bc1856650456857e406fcaa5c180290dfe","modified":1518211067000},{"_id":"source/includes/_portfolio.md","hash":"8cf2a6fec518374eb568363606e651c80270eef6","modified":1518211067000},{"_id":"themes/whiteboard/scripts/highlight.js","hash":"34526cb5cb700767616fce2af92a5a3bd1af4fec","modified":1518211067000},{"_id":"source/includes/_questionnaire.md","hash":"26e3289ab0f2966c470c7c82e072071c400f8a66","modified":1518211067000},{"_id":"themes/whiteboard/scripts/read.js","hash":"29834f8a3e8056933a5a42106c405f48254cae79","modified":1518211067000},{"_id":"source/includes/_versioning.md","hash":"000fa5a4d6a7607f2b3c3453d7640b1efd8f83b1","modified":1518217583000},{"_id":"themes/whiteboard/layout/index.ejs","hash":"367425380eeab40e3296b9b140913bb1d88e4f7a","modified":1518211067000},{"_id":"source/includes/_performance.md","hash":"44ca22813e3780a7389744cea10c08f3b6adbd64","modified":1518211067000},{"_id":"themes/whiteboard/source/css/_monokai.css","hash":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1518211067000},{"_id":"themes/whiteboard/source/css/_normalize.css","hash":"de2f367d6a7cf04fa965398f27e219d35d1e36cd","modified":1518211067000},{"_id":"themes/whiteboard/source/css/_variables.styl","hash":"8ee6b4021a98792d4bb7c349a2133bbbbfee0701","modified":1518211067000},{"_id":"themes/whiteboard/source/css/style.styl","hash":"de559dba28c1e435da7630ba55878146ecbdef20","modified":1518211067000},{"_id":"themes/whiteboard/source/css/_icon_font.styl","hash":"303710744c5526f5b6692c9e89716812a608bd95","modified":1518211067000},{"_id":"themes/whiteboard/source/js/script.js","hash":"2cd7238e808e0aad8a6c44527fdb25ab915e8e95","modified":1518211067000},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1518211067000},{"_id":"themes/whiteboard/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1518211067000},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1518211067000},{"_id":"themes/whiteboard/source/js/lib/energize.js","hash":"ed731e2a0fb5691f679da11a28248bebfd3ac343","modified":1518211067000},{"_id":"themes/whiteboard/source/js/lib/imagesloaded.min.js","hash":"4bccbca87d32236ed7a6f37129cc1accf20d2a8f","modified":1518211067000},{"_id":"themes/whiteboard/source/js/lib/jquery.highlight.js","hash":"40c3b83e9fb0166f191b29acd022d0f351620539","modified":1518211067000},{"_id":"themes/whiteboard/source/js/lib/jquery.tocify.js","hash":"8802b7a97396ec0d8b3624ffe3eb9897ea449893","modified":1518211067000},{"_id":"themes/whiteboard/source/js/lib/jquery_ui.js","hash":"14c78e285eff663ef023972185e46c4ce42eb731","modified":1518211067000},{"_id":"themes/whiteboard/source/js/lib/lunr.js","hash":"e7a81156e5de9f7ce23970c81b17e664c2b6fc80","modified":1518211067000},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1518211067000},{"_id":"themes/whiteboard/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1518211067000},{"_id":"source/.DS_Store","hash":"674109fd272908486f9dce4c51852e1e64a5d1df","modified":1518211180000},{"_id":"source/includes/_smartcontract.md","hash":"e4f4724ea6e521ebd1ea7d7a88e8844dc51dd92e","modified":1518216409000},{"_id":"source/includes/_raindrop.md","hash":"3346807c13d544a7c327c45798ca5a3970dac195","modified":1518214540000}],"Category":[],"Data":[],"Page":[{"title":"API Reference","language_tabs":["bash","javascript","python","java","ruby"],"toc_footers":["<a href='#'>Sign Up for a Developer Key</a>","<a href='http://github.com/mpociot/whiteboard'>Documentation Powered by Whiteboard</a>"],"includes":["errors"],"search":true,"_content":"\n# Introduction\n\nThe Hydrogen platform features powerful REST APIs with modules built for fintech. Take a look at our features below to see how we can help.\n\n# Authentication\n\n## Get authentication key\n\n> To authorize, use this code:\n\n```bash\ncurl -X POST \\\n  '<AUTH URI>/oauth/token?grant_type=client_credentials' \\\n  -H 'Authorization: Basic <BASE 64 ENCODE of USERNAME:PASSWORD>'\n```\n\n```javascript\nvar request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: '<AUTH URI>/oauth/token',\n  qs: { grant_type: 'client_credentials' },\n  headers: {\n    Authorization: 'Basic <BASE 64 ENCODE of USERNAME:PASSWORD>'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n```\n\n```python\nimport requests\n\nurl = \"<AUTH URI>/oauth/token\"\nquerystring = {\"grant_type\":\"client_credentials\"}\nheaders = {\n  'Authorization': \"Basic <BASE 64 ENCODE of USERNAME:PASSWORD>\"\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\nprint(response.text)\n```\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"<AUTH URI>/oauth/token?grant_type=client_credentials\")\n  .post(null)\n  .addHeader(\"Authorization\", \"Basic <BASE 64 ENCODE of USERNAME:PASSWORD>\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n```\n\n```ruby\nrequire 'uri'\nrequire 'net/http'\n\nurl = URI(\"<AUTH URI>/oauth/token?grant_type=client_credentials\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic <BASE 64 ENCODE of USERNAME:PASSWORD>'\n\nresponse = http.request(request)\nputs response.read_body\n```\n\n> Make sure to replace `<BASE 64 ENCODE of USERNAME:PASSWORD>` with a base64encode of your username and password.<br/><br/>Also make sure to replace `<AUTH URI>` with the main URI to the authorization module.\n\nYou will need a valid username and password to receive the proper authentication to use any API module.\n\nYour username and password will determine your permission level on what modules you can access.\n\n#### HTTP Request\n\n`POST /oauth/token?grant_type=client_credentials`\n\n## Authorizing with API\n\nThe subsequent API available expects for the AUTH KEY to be included in all API requests to the server in a header that looks like the following:\n\n`Authorization: 'Bearer <AUTH Key>'`\n\n<aside class=\"notice\">You must replace <code>&lt;API Key&gt;</code> with your personal API key.</aside>\n\n# Accounts\n\n## Client account information\n\nClient account information description here.\n\n### List all clients\n\n```bash\ncurl -X GET \\\n  <API BASE URI>/client \\\n  -H 'Authorization: Bearer <AUTH Key>'\n```\n\n```javascript\nvar request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: '<API BASE URI>/client',\n  headers: {\n    Authorization: 'Bearer <AUTH Key>'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n  console.log(body);\n});\n```\n\n```python\nimport requests\n\nurl = \"<API BASE URI>/client\"\nheaders = {\n  'Authorization': \"Bearer <AUTH KEY>\"\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\nprint(response.text)\n```\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"<API BASE URI>/client\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer <AUTH KEY>\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n```\n\n```ruby\nrequire 'uri'\nrequire 'net/http'\n\nurl = URI(\"<API BASE URI>/client\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer <AUTH KEY>'\n\nresponse = http.request(request)\nputs response.read_body\n```\n\n> Successful response sample:\n\n```json\n{\n  \"access_token\": \"bf2e04eb-fed2-4b10-bf08-cf006557c2d2\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 24697,\n  \"scope\": \"all\"\n}\n```\n\nGet a list of all clients under a partner.\n\n#### HTTP Request\n\n`GET /client`\n\n### List all accounts for a client\n\n```bash\ncurl -X GET \\\n  <API BASE URI>/client/{clientid}/account \\\n  -H 'Authorization: Bearer <AUTH Key>'\n```\n\n```javascript\nvar request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: '<API BASE URI>/client/{clientid}/account',\n  headers: {\n    Authorization: 'Bearer <AUTH Key>'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n  console.log(body);\n});\n```\n\n```python\nimport requests\n\nurl = \"<API BASE URI>/client/{clientid}/account\"\nheaders = {\n  'Authorization': \"Bearer <AUTH KEY>\"\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\nprint(response.text)\n```\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"<API BASE URI>/client/{clientid}/account\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer <AUTH KEY>\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n```\n\n```ruby\nrequire 'uri'\nrequire 'net/http'\n\nurl = URI(\"<API BASE URI>/client/{clientid}/account\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer <AUTH KEY>'\n\nresponse = http.request(request)\nputs response.read_body\n```\n\n> Successful response sample:\n\n```json\n[\n  {\n    \"client_id\": 191846338,\n    \"client_account_association_id\": 2,\n    \"client_account_id\": 795479814,\n    \"name\": \"7PbrO9F5NHXpios715EKZMjad1ZzkgSNaJkr576k/P0=\",\n    \"create_date\": \"2018-01-04 19:25:22.0\",\n    \"managed\": true,\n    \"account_type\": 201,\n    \"owner_id\": 191846341,\n    \"goal_id\": [\n      574201246\n    ]\n  },\n  {\n    \"client_id\": 191846338,\n    \"client_account_association_id\": 2,\n    \"client_account_id\": 795479813,\n    \"name\": \"/S9InG8D2AC1UEJAFa1s5itgTgZINpXosrj3nVG7c2U=\",\n    \"create_date\": \"2018-01-04 19:25:22.0\",\n    \"managed\": true,\n    \"account_type\": 201,\n    \"owner_id\": 191846340,\n    \"goal_id\": [\n      574201246\n    ]\n  }\n]\n```\n\nGet information for all accounts associated with a client. Must provide the <code>clientid</code>. To identify the appropriate <code>clientid</code>, use the GET /client endpoint to see all clients for your firm. Returns details such as the <code>accountid</code>, account type, the created date, account name, account owner, etc. for each account.\n\n#### HTTP Request\n\n`GET /client/{clientid}/account`\n\n#### URL Parameters\n\nParameter | Description\n--------- | -----------\nclientid | Client id associated with account details\n","source":"index.bak.md","raw":"---\ntitle: API Reference\n\nlanguage_tabs:\n  - bash\n  - javascript\n  - python\n  - java\n  - ruby\n\ntoc_footers:\n  - <a href='#'>Sign Up for a Developer Key</a>\n  - <a href='http://github.com/mpociot/whiteboard'>Documentation Powered by Whiteboard</a>\n\nincludes:\n  - errors\n\nsearch: true\n---\n\n# Introduction\n\nThe Hydrogen platform features powerful REST APIs with modules built for fintech. Take a look at our features below to see how we can help.\n\n# Authentication\n\n## Get authentication key\n\n> To authorize, use this code:\n\n```bash\ncurl -X POST \\\n  '<AUTH URI>/oauth/token?grant_type=client_credentials' \\\n  -H 'Authorization: Basic <BASE 64 ENCODE of USERNAME:PASSWORD>'\n```\n\n```javascript\nvar request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: '<AUTH URI>/oauth/token',\n  qs: { grant_type: 'client_credentials' },\n  headers: {\n    Authorization: 'Basic <BASE 64 ENCODE of USERNAME:PASSWORD>'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n```\n\n```python\nimport requests\n\nurl = \"<AUTH URI>/oauth/token\"\nquerystring = {\"grant_type\":\"client_credentials\"}\nheaders = {\n  'Authorization': \"Basic <BASE 64 ENCODE of USERNAME:PASSWORD>\"\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\nprint(response.text)\n```\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"<AUTH URI>/oauth/token?grant_type=client_credentials\")\n  .post(null)\n  .addHeader(\"Authorization\", \"Basic <BASE 64 ENCODE of USERNAME:PASSWORD>\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n```\n\n```ruby\nrequire 'uri'\nrequire 'net/http'\n\nurl = URI(\"<AUTH URI>/oauth/token?grant_type=client_credentials\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic <BASE 64 ENCODE of USERNAME:PASSWORD>'\n\nresponse = http.request(request)\nputs response.read_body\n```\n\n> Make sure to replace `<BASE 64 ENCODE of USERNAME:PASSWORD>` with a base64encode of your username and password.<br/><br/>Also make sure to replace `<AUTH URI>` with the main URI to the authorization module.\n\nYou will need a valid username and password to receive the proper authentication to use any API module.\n\nYour username and password will determine your permission level on what modules you can access.\n\n#### HTTP Request\n\n`POST /oauth/token?grant_type=client_credentials`\n\n## Authorizing with API\n\nThe subsequent API available expects for the AUTH KEY to be included in all API requests to the server in a header that looks like the following:\n\n`Authorization: 'Bearer <AUTH Key>'`\n\n<aside class=\"notice\">You must replace <code>&lt;API Key&gt;</code> with your personal API key.</aside>\n\n# Accounts\n\n## Client account information\n\nClient account information description here.\n\n### List all clients\n\n```bash\ncurl -X GET \\\n  <API BASE URI>/client \\\n  -H 'Authorization: Bearer <AUTH Key>'\n```\n\n```javascript\nvar request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: '<API BASE URI>/client',\n  headers: {\n    Authorization: 'Bearer <AUTH Key>'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n  console.log(body);\n});\n```\n\n```python\nimport requests\n\nurl = \"<API BASE URI>/client\"\nheaders = {\n  'Authorization': \"Bearer <AUTH KEY>\"\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\nprint(response.text)\n```\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"<API BASE URI>/client\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer <AUTH KEY>\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n```\n\n```ruby\nrequire 'uri'\nrequire 'net/http'\n\nurl = URI(\"<API BASE URI>/client\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer <AUTH KEY>'\n\nresponse = http.request(request)\nputs response.read_body\n```\n\n> Successful response sample:\n\n```json\n{\n  \"access_token\": \"bf2e04eb-fed2-4b10-bf08-cf006557c2d2\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 24697,\n  \"scope\": \"all\"\n}\n```\n\nGet a list of all clients under a partner.\n\n#### HTTP Request\n\n`GET /client`\n\n### List all accounts for a client\n\n```bash\ncurl -X GET \\\n  <API BASE URI>/client/{clientid}/account \\\n  -H 'Authorization: Bearer <AUTH Key>'\n```\n\n```javascript\nvar request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: '<API BASE URI>/client/{clientid}/account',\n  headers: {\n    Authorization: 'Bearer <AUTH Key>'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n  console.log(body);\n});\n```\n\n```python\nimport requests\n\nurl = \"<API BASE URI>/client/{clientid}/account\"\nheaders = {\n  'Authorization': \"Bearer <AUTH KEY>\"\n}\n\nresponse = requests.request(\"GET\", url, headers=headers)\nprint(response.text)\n```\n\n```java\nOkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"<API BASE URI>/client/{clientid}/account\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer <AUTH KEY>\")\n  .build();\n\nResponse response = client.newCall(request).execute();\n```\n\n```ruby\nrequire 'uri'\nrequire 'net/http'\n\nurl = URI(\"<API BASE URI>/client/{clientid}/account\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer <AUTH KEY>'\n\nresponse = http.request(request)\nputs response.read_body\n```\n\n> Successful response sample:\n\n```json\n[\n  {\n    \"client_id\": 191846338,\n    \"client_account_association_id\": 2,\n    \"client_account_id\": 795479814,\n    \"name\": \"7PbrO9F5NHXpios715EKZMjad1ZzkgSNaJkr576k/P0=\",\n    \"create_date\": \"2018-01-04 19:25:22.0\",\n    \"managed\": true,\n    \"account_type\": 201,\n    \"owner_id\": 191846341,\n    \"goal_id\": [\n      574201246\n    ]\n  },\n  {\n    \"client_id\": 191846338,\n    \"client_account_association_id\": 2,\n    \"client_account_id\": 795479813,\n    \"name\": \"/S9InG8D2AC1UEJAFa1s5itgTgZINpXosrj3nVG7c2U=\",\n    \"create_date\": \"2018-01-04 19:25:22.0\",\n    \"managed\": true,\n    \"account_type\": 201,\n    \"owner_id\": 191846340,\n    \"goal_id\": [\n      574201246\n    ]\n  }\n]\n```\n\nGet information for all accounts associated with a client. Must provide the <code>clientid</code>. To identify the appropriate <code>clientid</code>, use the GET /client endpoint to see all clients for your firm. Returns details such as the <code>accountid</code>, account type, the created date, account name, account owner, etc. for each account.\n\n#### HTTP Request\n\n`GET /client/{clientid}/account`\n\n#### URL Parameters\n\nParameter | Description\n--------- | -----------\nclientid | Client id associated with account details\n","date":"2018-02-09T21:17:47.000Z","updated":"2018-02-09T21:17:47.000Z","path":"index.bak.html","comments":1,"layout":"page","_id":"cjdgfpa950000pw93t3cgfgj7","content":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>The Hydrogen platform features powerful REST APIs with modules built for fintech. Take a look at our features below to see how we can help.</p>\n<h1 id=\"Authentication\"><a href=\"#Authentication\" class=\"headerlink\" title=\"Authentication\"></a>Authentication</h1><h2 id=\"Get-authentication-key\"><a href=\"#Get-authentication-key\" class=\"headerlink\" title=\"Get authentication key\"></a>Get authentication key</h2><blockquote>\n<p>To authorize, use this code:</p>\n</blockquote>\n<pre><code class=\"highlight bash\"><span class=\"line\">curl -X POST \\</span><br><span class=\"line\">  <span class=\"string\">'&lt;AUTH URI&gt;/oauth/token?grant_type=client_credentials'</span> \\</span><br><span class=\"line\">  -H <span class=\"string\">'Authorization: Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;'</span></span><br></code></pre>\n<pre><code class=\"highlight javascript\"><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">\"request\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">  method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">  url: <span class=\"string\">'&lt;AUTH URI&gt;/oauth/token'</span>,</span><br><span class=\"line\">  qs: &#123; <span class=\"attr\">grant_type</span>: <span class=\"string\">'client_credentials'</span> &#125;,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Authorization: <span class=\"string\">'Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(error);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(body);</span><br><span class=\"line\">&#125;);</span><br></code></pre>\n<pre><code class=\"highlight python\"><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"&lt;AUTH URI&gt;/oauth/token\"</span></span><br><span class=\"line\">querystring = &#123;<span class=\"string\">\"grant_type\"</span>:<span class=\"string\">\"client_credentials\"</span>&#125;</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  <span class=\"string\">'Authorization'</span>: <span class=\"string\">\"Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.request(<span class=\"string\">\"POST\"</span>, url, headers=headers, params=querystring)</span><br><span class=\"line\">print(response.text)</span><br></code></pre>\n<pre><code class=\"highlight java\"><span class=\"line\">OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">  .url(<span class=\"string\">\"&lt;AUTH URI&gt;/oauth/token?grant_type=client_credentials\"</span>)</span><br><span class=\"line\">  .post(<span class=\"keyword\">null</span>)</span><br><span class=\"line\">  .addHeader(<span class=\"string\">\"Authorization\"</span>, <span class=\"string\">\"Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;\"</span>)</span><br><span class=\"line\">  .build();</span><br><span class=\"line\"></span><br><span class=\"line\">Response response = client.newCall(request).execute();</span><br></code></pre>\n<pre><code class=\"highlight ruby\"><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'uri'</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'net/http'</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = URI(<span class=\"string\">\"&lt;AUTH URI&gt;/oauth/token?grant_type=client_credentials\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">http = Net::HTTP.new(url.host, url.port)</span><br><span class=\"line\"></span><br><span class=\"line\">request = Net::HTTP::Post.new(url)</span><br><span class=\"line\">request[<span class=\"string\">\"Authorization\"</span>] = <span class=\"string\">'Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = http.request(request)</span><br><span class=\"line\">puts response.read_body</span><br></code></pre>\n<blockquote>\n<p>Make sure to replace <code>&lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;</code> with a base64encode of your username and password.<br><br>Also make sure to replace <code>&lt;AUTH URI&gt;</code> with the main URI to the authorization module.</p>\n</blockquote>\n<p>You will need a valid username and password to receive the proper authentication to use any API module.</p>\n<p>Your username and password will determine your permission level on what modules you can access.</p>\n<h4 id=\"HTTP-Request\"><a href=\"#HTTP-Request\" class=\"headerlink\" title=\"HTTP Request\"></a>HTTP Request</h4><p><code>POST /oauth/token?grant_type=client_credentials</code></p>\n<h2 id=\"Authorizing-with-API\"><a href=\"#Authorizing-with-API\" class=\"headerlink\" title=\"Authorizing with API\"></a>Authorizing with API</h2><p>The subsequent API available expects for the AUTH KEY to be included in all API requests to the server in a header that looks like the following:</p>\n<p><code>Authorization: &#39;Bearer &lt;AUTH Key&gt;&#39;</code></p>\n<aside class=\"notice\">You must replace <code>&lt;API Key&gt;</code> with your personal API key.</aside>\n\n<h1 id=\"Accounts\"><a href=\"#Accounts\" class=\"headerlink\" title=\"Accounts\"></a>Accounts</h1><h2 id=\"Client-account-information\"><a href=\"#Client-account-information\" class=\"headerlink\" title=\"Client account information\"></a>Client account information</h2><p>Client account information description here.</p>\n<h3 id=\"List-all-clients\"><a href=\"#List-all-clients\" class=\"headerlink\" title=\"List all clients\"></a>List all clients</h3><pre><code class=\"highlight bash\"><span class=\"line\">curl -X GET \\</span><br><span class=\"line\">  &lt;API BASE URI&gt;/client \\</span><br><span class=\"line\">  -H <span class=\"string\">'Authorization: Bearer &lt;AUTH Key&gt;'</span></span><br></code></pre>\n<pre><code class=\"highlight javascript\"><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">\"request\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> options = &#123; <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">  url: <span class=\"string\">'&lt;API BASE URI&gt;/client'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Authorization: <span class=\"string\">'Bearer &lt;AUTH Key&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(error);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(body);</span><br><span class=\"line\">&#125;);</span><br></code></pre>\n<pre><code class=\"highlight python\"><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"&lt;API BASE URI&gt;/client\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  <span class=\"string\">'Authorization'</span>: <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.request(<span class=\"string\">\"GET\"</span>, url, headers=headers)</span><br><span class=\"line\">print(response.text)</span><br></code></pre>\n<pre><code class=\"highlight java\"><span class=\"line\">OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">  .url(<span class=\"string\">\"&lt;API BASE URI&gt;/client\"</span>)</span><br><span class=\"line\">  .get()</span><br><span class=\"line\">  .addHeader(<span class=\"string\">\"Authorization\"</span>, <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span>)</span><br><span class=\"line\">  .build();</span><br><span class=\"line\"></span><br><span class=\"line\">Response response = client.newCall(request).execute();</span><br></code></pre>\n<pre><code class=\"highlight ruby\"><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'uri'</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'net/http'</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = URI(<span class=\"string\">\"&lt;API BASE URI&gt;/client\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">http = Net::HTTP.new(url.host, url.port)</span><br><span class=\"line\"></span><br><span class=\"line\">request = Net::HTTP::Get.new(url)</span><br><span class=\"line\">request[<span class=\"string\">\"Authorization\"</span>] = <span class=\"string\">'Bearer &lt;AUTH KEY&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = http.request(request)</span><br><span class=\"line\">puts response.read_body</span><br></code></pre>\n<blockquote>\n<p>Successful response sample:</p>\n</blockquote>\n<pre><code class=\"highlight json\"><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"access_token\"</span>: <span class=\"string\">\"bf2e04eb-fed2-4b10-bf08-cf006557c2d2\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"token_type\"</span>: <span class=\"string\">\"bearer\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"expires_in\"</span>: <span class=\"number\">24697</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"scope\"</span>: <span class=\"string\">\"all\"</span></span><br><span class=\"line\">&#125;</span><br></code></pre>\n<p>Get a list of all clients under a partner.</p>\n<h4 id=\"HTTP-Request-1\"><a href=\"#HTTP-Request-1\" class=\"headerlink\" title=\"HTTP Request\"></a>HTTP Request</h4><p><code>GET /client</code></p>\n<h3 id=\"List-all-accounts-for-a-client\"><a href=\"#List-all-accounts-for-a-client\" class=\"headerlink\" title=\"List all accounts for a client\"></a>List all accounts for a client</h3><pre><code class=\"highlight bash\"><span class=\"line\">curl -X GET \\</span><br><span class=\"line\">  &lt;API BASE URI&gt;/client/&#123;clientid&#125;/account \\</span><br><span class=\"line\">  -H <span class=\"string\">'Authorization: Bearer &lt;AUTH Key&gt;'</span></span><br></code></pre>\n<pre><code class=\"highlight javascript\"><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">\"request\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> options = &#123; <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">  url: <span class=\"string\">'&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Authorization: <span class=\"string\">'Bearer &lt;AUTH Key&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(error);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(body);</span><br><span class=\"line\">&#125;);</span><br></code></pre>\n<pre><code class=\"highlight python\"><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  <span class=\"string\">'Authorization'</span>: <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.request(<span class=\"string\">\"GET\"</span>, url, headers=headers)</span><br><span class=\"line\">print(response.text)</span><br></code></pre>\n<pre><code class=\"highlight java\"><span class=\"line\">OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">  .url(<span class=\"string\">\"&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account\"</span>)</span><br><span class=\"line\">  .get()</span><br><span class=\"line\">  .addHeader(<span class=\"string\">\"Authorization\"</span>, <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span>)</span><br><span class=\"line\">  .build();</span><br><span class=\"line\"></span><br><span class=\"line\">Response response = client.newCall(request).execute();</span><br></code></pre>\n<pre><code class=\"highlight ruby\"><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'uri'</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'net/http'</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = URI(<span class=\"string\">\"&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">http = Net::HTTP.new(url.host, url.port)</span><br><span class=\"line\"></span><br><span class=\"line\">request = Net::HTTP::Get.new(url)</span><br><span class=\"line\">request[<span class=\"string\">\"Authorization\"</span>] = <span class=\"string\">'Bearer &lt;AUTH KEY&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = http.request(request)</span><br><span class=\"line\">puts response.read_body</span><br></code></pre>\n<blockquote>\n<p>Successful response sample:</p>\n</blockquote>\n<pre><code class=\"highlight json\"><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"client_id\"</span>: <span class=\"number\">191846338</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_association_id\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_id\"</span>: <span class=\"number\">795479814</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"7PbrO9F5NHXpios715EKZMjad1ZzkgSNaJkr576k/P0=\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"create_date\"</span>: <span class=\"string\">\"2018-01-04 19:25:22.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"managed\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"account_type\"</span>: <span class=\"number\">201</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"owner_id\"</span>: <span class=\"number\">191846341</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"goal_id\"</span>: [</span><br><span class=\"line\">      <span class=\"number\">574201246</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"client_id\"</span>: <span class=\"number\">191846338</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_association_id\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_id\"</span>: <span class=\"number\">795479813</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"/S9InG8D2AC1UEJAFa1s5itgTgZINpXosrj3nVG7c2U=\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"create_date\"</span>: <span class=\"string\">\"2018-01-04 19:25:22.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"managed\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"account_type\"</span>: <span class=\"number\">201</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"owner_id\"</span>: <span class=\"number\">191846340</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"goal_id\"</span>: [</span><br><span class=\"line\">      <span class=\"number\">574201246</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></code></pre>\n<p>Get information for all accounts associated with a client. Must provide the <code>clientid</code>. To identify the appropriate <code>clientid</code>, use the GET /client endpoint to see all clients for your firm. Returns details such as the <code>accountid</code>, account type, the created date, account name, account owner, etc. for each account.</p>\n<h4 id=\"HTTP-Request-2\"><a href=\"#HTTP-Request-2\" class=\"headerlink\" title=\"HTTP Request\"></a>HTTP Request</h4><p><code>GET /client/{clientid}/account</code></p>\n<h4 id=\"URL-Parameters\"><a href=\"#URL-Parameters\" class=\"headerlink\" title=\"URL Parameters\"></a>URL Parameters</h4><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientid</td>\n<td>Client id associated with account details</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>The Hydrogen platform features powerful REST APIs with modules built for fintech. Take a look at our features below to see how we can help.</p>\n<h1 id=\"Authentication\"><a href=\"#Authentication\" class=\"headerlink\" title=\"Authentication\"></a>Authentication</h1><h2 id=\"Get-authentication-key\"><a href=\"#Get-authentication-key\" class=\"headerlink\" title=\"Get authentication key\"></a>Get authentication key</h2><blockquote>\n<p>To authorize, use this code:</p>\n</blockquote>\n<pre><code class=\"highlight bash\"><span class=\"line\">curl -X POST \\</span><br><span class=\"line\">  <span class=\"string\">'&lt;AUTH URI&gt;/oauth/token?grant_type=client_credentials'</span> \\</span><br><span class=\"line\">  -H <span class=\"string\">'Authorization: Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;'</span></span><br></code></pre>\n<pre><code class=\"highlight javascript\"><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">\"request\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">  method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">  url: <span class=\"string\">'&lt;AUTH URI&gt;/oauth/token'</span>,</span><br><span class=\"line\">  qs: &#123; <span class=\"attr\">grant_type</span>: <span class=\"string\">'client_credentials'</span> &#125;,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Authorization: <span class=\"string\">'Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(error);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(body);</span><br><span class=\"line\">&#125;);</span><br></code></pre>\n<pre><code class=\"highlight python\"><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"&lt;AUTH URI&gt;/oauth/token\"</span></span><br><span class=\"line\">querystring = &#123;<span class=\"string\">\"grant_type\"</span>:<span class=\"string\">\"client_credentials\"</span>&#125;</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  <span class=\"string\">'Authorization'</span>: <span class=\"string\">\"Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.request(<span class=\"string\">\"POST\"</span>, url, headers=headers, params=querystring)</span><br><span class=\"line\">print(response.text)</span><br></code></pre>\n<pre><code class=\"highlight java\"><span class=\"line\">OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">  .url(<span class=\"string\">\"&lt;AUTH URI&gt;/oauth/token?grant_type=client_credentials\"</span>)</span><br><span class=\"line\">  .post(<span class=\"keyword\">null</span>)</span><br><span class=\"line\">  .addHeader(<span class=\"string\">\"Authorization\"</span>, <span class=\"string\">\"Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;\"</span>)</span><br><span class=\"line\">  .build();</span><br><span class=\"line\"></span><br><span class=\"line\">Response response = client.newCall(request).execute();</span><br></code></pre>\n<pre><code class=\"highlight ruby\"><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'uri'</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'net/http'</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = URI(<span class=\"string\">\"&lt;AUTH URI&gt;/oauth/token?grant_type=client_credentials\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">http = Net::HTTP.new(url.host, url.port)</span><br><span class=\"line\"></span><br><span class=\"line\">request = Net::HTTP::Post.new(url)</span><br><span class=\"line\">request[<span class=\"string\">\"Authorization\"</span>] = <span class=\"string\">'Basic &lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = http.request(request)</span><br><span class=\"line\">puts response.read_body</span><br></code></pre>\n<blockquote>\n<p>Make sure to replace <code>&lt;BASE 64 ENCODE of USERNAME:PASSWORD&gt;</code> with a base64encode of your username and password.<br><br>Also make sure to replace <code>&lt;AUTH URI&gt;</code> with the main URI to the authorization module.</p>\n</blockquote>\n<p>You will need a valid username and password to receive the proper authentication to use any API module.</p>\n<p>Your username and password will determine your permission level on what modules you can access.</p>\n<h4 id=\"HTTP-Request\"><a href=\"#HTTP-Request\" class=\"headerlink\" title=\"HTTP Request\"></a>HTTP Request</h4><p><code>POST /oauth/token?grant_type=client_credentials</code></p>\n<h2 id=\"Authorizing-with-API\"><a href=\"#Authorizing-with-API\" class=\"headerlink\" title=\"Authorizing with API\"></a>Authorizing with API</h2><p>The subsequent API available expects for the AUTH KEY to be included in all API requests to the server in a header that looks like the following:</p>\n<p><code>Authorization: &#39;Bearer &lt;AUTH Key&gt;&#39;</code></p>\n<aside class=\"notice\">You must replace <code>&lt;API Key&gt;</code> with your personal API key.</aside>\n\n<h1 id=\"Accounts\"><a href=\"#Accounts\" class=\"headerlink\" title=\"Accounts\"></a>Accounts</h1><h2 id=\"Client-account-information\"><a href=\"#Client-account-information\" class=\"headerlink\" title=\"Client account information\"></a>Client account information</h2><p>Client account information description here.</p>\n<h3 id=\"List-all-clients\"><a href=\"#List-all-clients\" class=\"headerlink\" title=\"List all clients\"></a>List all clients</h3><pre><code class=\"highlight bash\"><span class=\"line\">curl -X GET \\</span><br><span class=\"line\">  &lt;API BASE URI&gt;/client \\</span><br><span class=\"line\">  -H <span class=\"string\">'Authorization: Bearer &lt;AUTH Key&gt;'</span></span><br></code></pre>\n<pre><code class=\"highlight javascript\"><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">\"request\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> options = &#123; <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">  url: <span class=\"string\">'&lt;API BASE URI&gt;/client'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Authorization: <span class=\"string\">'Bearer &lt;AUTH Key&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(error);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(body);</span><br><span class=\"line\">&#125;);</span><br></code></pre>\n<pre><code class=\"highlight python\"><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"&lt;API BASE URI&gt;/client\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  <span class=\"string\">'Authorization'</span>: <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.request(<span class=\"string\">\"GET\"</span>, url, headers=headers)</span><br><span class=\"line\">print(response.text)</span><br></code></pre>\n<pre><code class=\"highlight java\"><span class=\"line\">OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">  .url(<span class=\"string\">\"&lt;API BASE URI&gt;/client\"</span>)</span><br><span class=\"line\">  .get()</span><br><span class=\"line\">  .addHeader(<span class=\"string\">\"Authorization\"</span>, <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span>)</span><br><span class=\"line\">  .build();</span><br><span class=\"line\"></span><br><span class=\"line\">Response response = client.newCall(request).execute();</span><br></code></pre>\n<pre><code class=\"highlight ruby\"><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'uri'</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'net/http'</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = URI(<span class=\"string\">\"&lt;API BASE URI&gt;/client\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">http = Net::HTTP.new(url.host, url.port)</span><br><span class=\"line\"></span><br><span class=\"line\">request = Net::HTTP::Get.new(url)</span><br><span class=\"line\">request[<span class=\"string\">\"Authorization\"</span>] = <span class=\"string\">'Bearer &lt;AUTH KEY&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = http.request(request)</span><br><span class=\"line\">puts response.read_body</span><br></code></pre>\n<blockquote>\n<p>Successful response sample:</p>\n</blockquote>\n<pre><code class=\"highlight json\"><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"access_token\"</span>: <span class=\"string\">\"bf2e04eb-fed2-4b10-bf08-cf006557c2d2\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"token_type\"</span>: <span class=\"string\">\"bearer\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"expires_in\"</span>: <span class=\"number\">24697</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"scope\"</span>: <span class=\"string\">\"all\"</span></span><br><span class=\"line\">&#125;</span><br></code></pre>\n<p>Get a list of all clients under a partner.</p>\n<h4 id=\"HTTP-Request-1\"><a href=\"#HTTP-Request-1\" class=\"headerlink\" title=\"HTTP Request\"></a>HTTP Request</h4><p><code>GET /client</code></p>\n<h3 id=\"List-all-accounts-for-a-client\"><a href=\"#List-all-accounts-for-a-client\" class=\"headerlink\" title=\"List all accounts for a client\"></a>List all accounts for a client</h3><pre><code class=\"highlight bash\"><span class=\"line\">curl -X GET \\</span><br><span class=\"line\">  &lt;API BASE URI&gt;/client/&#123;clientid&#125;/account \\</span><br><span class=\"line\">  -H <span class=\"string\">'Authorization: Bearer &lt;AUTH Key&gt;'</span></span><br></code></pre>\n<pre><code class=\"highlight javascript\"><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">\"request\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> options = &#123; <span class=\"attr\">method</span>: <span class=\"string\">'GET'</span>,</span><br><span class=\"line\">  url: <span class=\"string\">'&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Authorization: <span class=\"string\">'Bearer &lt;AUTH Key&gt;'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (error) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(error);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(body);</span><br><span class=\"line\">&#125;);</span><br></code></pre>\n<pre><code class=\"highlight python\"><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account\"</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">  <span class=\"string\">'Authorization'</span>: <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.request(<span class=\"string\">\"GET\"</span>, url, headers=headers)</span><br><span class=\"line\">print(response.text)</span><br></code></pre>\n<pre><code class=\"highlight java\"><span class=\"line\">OkHttpClient client = <span class=\"keyword\">new</span> OkHttpClient();</span><br><span class=\"line\"></span><br><span class=\"line\">Request request = <span class=\"keyword\">new</span> Request.Builder()</span><br><span class=\"line\">  .url(<span class=\"string\">\"&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account\"</span>)</span><br><span class=\"line\">  .get()</span><br><span class=\"line\">  .addHeader(<span class=\"string\">\"Authorization\"</span>, <span class=\"string\">\"Bearer &lt;AUTH KEY&gt;\"</span>)</span><br><span class=\"line\">  .build();</span><br><span class=\"line\"></span><br><span class=\"line\">Response response = client.newCall(request).execute();</span><br></code></pre>\n<pre><code class=\"highlight ruby\"><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'uri'</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'net/http'</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = URI(<span class=\"string\">\"&lt;API BASE URI&gt;/client/&#123;clientid&#125;/account\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">http = Net::HTTP.new(url.host, url.port)</span><br><span class=\"line\"></span><br><span class=\"line\">request = Net::HTTP::Get.new(url)</span><br><span class=\"line\">request[<span class=\"string\">\"Authorization\"</span>] = <span class=\"string\">'Bearer &lt;AUTH KEY&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = http.request(request)</span><br><span class=\"line\">puts response.read_body</span><br></code></pre>\n<blockquote>\n<p>Successful response sample:</p>\n</blockquote>\n<pre><code class=\"highlight json\"><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"client_id\"</span>: <span class=\"number\">191846338</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_association_id\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_id\"</span>: <span class=\"number\">795479814</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"7PbrO9F5NHXpios715EKZMjad1ZzkgSNaJkr576k/P0=\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"create_date\"</span>: <span class=\"string\">\"2018-01-04 19:25:22.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"managed\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"account_type\"</span>: <span class=\"number\">201</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"owner_id\"</span>: <span class=\"number\">191846341</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"goal_id\"</span>: [</span><br><span class=\"line\">      <span class=\"number\">574201246</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"client_id\"</span>: <span class=\"number\">191846338</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_association_id\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"client_account_id\"</span>: <span class=\"number\">795479813</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"/S9InG8D2AC1UEJAFa1s5itgTgZINpXosrj3nVG7c2U=\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"create_date\"</span>: <span class=\"string\">\"2018-01-04 19:25:22.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"managed\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"account_type\"</span>: <span class=\"number\">201</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"owner_id\"</span>: <span class=\"number\">191846340</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"goal_id\"</span>: [</span><br><span class=\"line\">      <span class=\"number\">574201246</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></code></pre>\n<p>Get information for all accounts associated with a client. Must provide the <code>clientid</code>. To identify the appropriate <code>clientid</code>, use the GET /client endpoint to see all clients for your firm. Returns details such as the <code>accountid</code>, account type, the created date, account name, account owner, etc. for each account.</p>\n<h4 id=\"HTTP-Request-2\"><a href=\"#HTTP-Request-2\" class=\"headerlink\" title=\"HTTP Request\"></a>HTTP Request</h4><p><code>GET /client/{clientid}/account</code></p>\n<h4 id=\"URL-Parameters\"><a href=\"#URL-Parameters\" class=\"headerlink\" title=\"URL Parameters\"></a>URL Parameters</h4><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientid</td>\n<td>Client id associated with account details</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"API Reference","language_tabs":["curl","Node","Python","Java"],"includes":["intro","authentication","errors","versioning","smartcontract","endpoints","raindrop"],"search":true,"_content":"","source":"index.md","raw":"---\ntitle: API Reference\n\nlanguage_tabs:\n  - curl\n  - Node\n  - Python\n  - Java\n\nincludes:\n  - intro\n  - authentication\n  - errors\n  - versioning\n  - smartcontract\n  - endpoints\n  - raindrop\n\nsearch: true\n---\n","date":"2018-02-09T23:13:19.000Z","updated":"2018-02-09T22:36:32.000Z","path":"index.html","_id":"cjdgfpa990001pw93kgxgav54","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}